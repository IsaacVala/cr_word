@*Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in the root of the repo.*@
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Sign-in dialog";
}

    <div>
        <h1>SPA Authorization Code</h1>
        <p>This dialog will use the SPA authorization code to obtain the access token and return it to the task pane.</p>
    </div>     

<script>
    var clientId = '@Configuration["AzureAd:ClientId"]';
    async function sendMessageToTaskPane(){
        await Office.onReady(async () => {
            // Request an access token for the user.
            const accessScope = "api://" + window.location.host + "/" + clientId + "/access_as_user";
            const scopes = [accessScope,"Files.Read"];
            const tokenResponse = await getTokenFromCache(scopes);
       
            // Construct and return message with access token (or error).
            let message;
            if (tokenResponse) {
                message = { status: "success", accessToken: tokenResponse.accessToken };
            }
            else {
                message = { status: "failure", error: "Could not retrieve access token." };
            }
            Office.context.ui.messageParent(JSON.stringify(message));       
            });
    }

    // Only need to run this once to ensure the token has been loaded.
    document.addEventListener('AUTHENTICATED', async () => await sendMessageToTaskPane(), { once: true });
</script>





